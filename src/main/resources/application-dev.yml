# ============================================================================
# application-dev.yml - Configuración de DESARROLLO
# ============================================================================
# Este archivo contiene la configuración para el entorno de desarrollo local
# Usar: java -jar app.jar --spring.profiles.active=dev
# ============================================================================

spring:
  application:
    name: integracion-epagos-dev

  # ==========================================================================
  # BASE DE DATOS H2 - CACHÉ PRIMARIO (EN MEMORIA)
  # ==========================================================================
  datasource:
    # H2 en memoria para desarrollo rápido sin persistencia
    url: jdbc:h2:mem:infracciones_cache;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    driver-class-name: org.h2.Driver
    username: sa
    password:

    # Pool de conexiones HikariCP optimizado para desarrollo
    hikari:
      maximum-pool-size: 5        # Reducido para desarrollo local
      minimum-idle: 2
      connection-timeout: 30000   # 30 segundos
      idle-timeout: 600000        # 10 minutos
      max-lifetime: 1800000       # 30 minutos
      pool-name: H2-Cache-Pool-DEV
      leak-detection-threshold: 60000  # Detectar conexiones no cerradas

  # Habilitar consola H2 para inspección (solo desarrollo)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false  # Seguridad: solo localhost

  # ==========================================================================
  # CONFIGURACIÓN JPA/HIBERNATE
  # ==========================================================================
  jpa:
    # Estrategia de DDL: recrear esquema en cada inicio (solo desarrollo)
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

    # Mostrar SQL en logs para debugging
    show-sql: true

    # Propiedades adicionales de Hibernate
    properties:
      hibernate:
        # Formateo de SQL para mejor legibilidad
        format_sql: true
        use_sql_comments: true

        # Dialecto H2 con compatibilidad PostgreSQL
        dialect: org.hibernate.dialect.H2Dialect

        # Optimizaciones de batch processing
        jdbc:
          batch_size: 50
          fetch_size: 50
        order_inserts: true
        order_updates: true

        # Estadísticas de performance (útil en desarrollo)
        generate_statistics: true

  # ==========================================================================
  # CONFIGURACIÓN DE SERVIDOR WEB (TOMCAT EMBEBIDO)
  # ==========================================================================
server:
  port: 8080
  servlet:
    context-path: /api

  # Configuración de timeouts
  tomcat:
    connection-timeout: 60000  # 60 segundos
    threads:
      max: 50                  # Threads máximos
      min-spare: 10            # Threads mínimos en espera
    max-connections: 100       # Conexiones simultáneas máximas

# ============================================================================
# BASES DE DATOS POSTGRESQL - PROVINCIALES (DESARROLLO)
# ============================================================================
# Variables de entorno esperadas:
# - PBA_URL, PBA_USERNAME, PBA_PASSWORD
# - MDA_URL, MDA_USERNAME, MDA_PASSWORD
# - SANTA_ROSA_URL, SANTA_ROSA_USERNAME, SANTA_ROSA_PASSWORD
# - CHACO_URL, CHACO_USERNAME, CHACO_PASSWORD
# - ENTRE_RIOS_URL, ENTRE_RIOS_USERNAME, ENTRE_RIOS_PASSWORD
# - FORMOSA_URL, FORMOSA_USERNAME, FORMOSA_PASSWORD
# ============================================================================
postgresql:
  datasources:
    # Provincia de Buenos Aires (PBA)
    pba:
      jdbc-url: ${PBA_URL}
      username: ${PBA_USERNAME}
      password: ${PBA_PASSWORD}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 5
        minimum-idle: 1
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        pool-name: PBA-Pool-DEV
        leak-detection-threshold: 60000

    # Mar del Plata (MDA)
    mda:
      jdbc-url: ${MDA_URL}
      username: ${MDA_USERNAME}
      password: ${MDA_PASSWORD}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 5
        minimum-idle: 1
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        pool-name: MDA-Pool-DEV
        leak-detection-threshold: 60000

    # Santa Rosa (La Pampa)
    santa-rosa:
      jdbc-url: ${SANTA_ROSA_URL}
      username: ${SANTA_ROSA_USERNAME}
      password: ${SANTA_ROSA_PASSWORD}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 5
        minimum-idle: 1
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        pool-name: SantaRosa-Pool-DEV
        leak-detection-threshold: 60000

    # Chaco
    chaco:
      jdbc-url: ${CHACO_URL}
      username: ${CHACO_USERNAME}
      password: ${CHACO_PASSWORD}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 5
        minimum-idle: 1
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        pool-name: Chaco-Pool-DEV
        leak-detection-threshold: 60000

    # Entre Ríos
    entre-rios:
      jdbc-url: ${ENTRE_RIOS_URL}
      username: ${ENTRE_RIOS_USERNAME}
      password: ${ENTRE_RIOS_PASSWORD}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 5
        minimum-idle: 1
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        pool-name: EntreRios-Pool-DEV
        leak-detection-threshold: 60000

    # Formosa
    formosa:
      jdbc-url: ${FORMOSA_URL}
      username: ${FORMOSA_USERNAME}
      password: ${FORMOSA_PASSWORD}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 5
        minimum-idle: 1
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        pool-name: Formosa-Pool-DEV
        leak-detection-threshold: 60000

# ============================================================================
# CONFIGURACIÓN E-PAGOS (DESARROLLO - URL DE TESTING)
# ============================================================================
epagos:
  soap:
    # URL del servicio SOAP de e-Pagos (testing o producción según disponibilidad)
    url: ${EPAGOS_URL:https://www.epagos.com/svc/wsespeciales.asmx}

    # Credenciales proporcionadas por e-Pagos
    # IMPORTANTE: Usar variables de entorno en lugar de hardcodear
    usuario: ${EPAGOS_USER}
    clave: ${EPAGOS_PASSWORD}

    # Timeouts configurables (más generosos en desarrollo para debugging)
    connection-timeout: ${EPAGOS_CONN_TIMEOUT:30000}   # 30 segundos
    read-timeout: ${EPAGOS_READ_TIMEOUT:60000}         # 60 segundos

    # Configuración de retry
    max-retries: 3
    retry-delay: 2000  # 2 segundos entre reintentos

# ============================================================================
# CONFIGURACIÓN DE LOGGING
# ============================================================================
logging:
  level:
    # Nivel base
    root: INFO

    # Logging detallado de la aplicación
    org.transito_seguro: DEBUG

    # Logging de SQL y parámetros
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.stat: DEBUG

    # Logging de comunicaciones SOAP
    org.springframework.ws: DEBUG
    org.springframework.ws.client: TRACE
    org.springframework.ws.server: TRACE

    # Logging HTTP
    org.apache.http: DEBUG
    org.apache.http.wire: DEBUG

    # Logging de pool de conexiones
    com.zaxxer.hikari: INFO

    # Spring Framework
    org.springframework.jdbc: INFO
    org.springframework.transaction: INFO

  # Configuración de archivo de logs
  file:
    name: logs/integracion-epagos-dev.log
    max-size: 10MB
    max-history: 7  # Mantener últimos 7 días
    total-size-cap: 100MB

  # Patrones de formato
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# ============================================================================
# CONFIGURACIÓN DE TAREAS PROGRAMADAS (DESARROLLO)
# ============================================================================
scheduling:
  # Deshabilitar ejecución automática en desarrollo para evitar sobrecarga
  enabled: false

  # Configuración de cron expressions (para cuando se habilite manualmente)
  cron:
    sincronizacion: "0 0 3 * * ?"        # 3:00 AM diariamente
    rendiciones: "0 0 2 * * ?"           # 2:00 AM diariamente
    contracargos: "0 30 2 * * ?"         # 2:30 AM diariamente
    limpieza-cache: "0 0 0 * * ?"        # Medianoche diariamente

# ============================================================================
# CONFIGURACIÓN DE ACTUATOR (MONITOREO)
# ============================================================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  metrics:
    enable:
      jvm: true
      jdbc: true
      hikaricp: true

# ============================================================================
# CONFIGURACIÓN PERSONALIZADA DE LA APLICACIÓN
# ============================================================================
app:
  # Configuración de sincronización
  sync:
    days-back: 7                    # Consultar últimos 7 días
    batch-size: 100                 # Procesar en lotes de 100
    parallel-threads: 3             # Threads paralelos para consultas

  # Configuración de reintentos
  retry:
    max-attempts: 3
    backoff-delay: 2000            # 2 segundos

  # Configuración de caché
  cache:
    ttl-minutes: 60                # TTL de 1 hora en desarrollo
    max-entries: 10000             # Máximo 10k entradas en caché